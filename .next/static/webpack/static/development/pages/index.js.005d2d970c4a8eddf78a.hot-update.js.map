{"version":3,"file":"static/webpack/static/development/pages/index.js.005d2d970c4a8eddf78a.hot-update.js","sources":["webpack:///./pages/apollo.js"],"sourcesContent":["import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\nimport fetch from 'node-fetch'\nimport withApollo from 'next-with-apollo'\n\nexport const graphqlURI = 'https://eu1.prisma.sh/roman-42dfa5/demo/dev'\n\n// export default withApollo(\n//   ({ initialState }) =>\n//     new ApolloClient({\n//       link: ApolloLink.from([\n//         onError(({ graphQLErrors, networkError }) => {\n//           if (graphQLErrors)\n//             graphQLErrors.forEach(({ message, locations, path }) =>\n//               console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n//             )\n//           if (networkError) console.log(`[Network error]: ${networkError}`)\n//         }),\n//         new HttpLink({\n//           uri: graphqlURI,\n//           credentials: 'same-origin',\n//           fetch\n//         })\n//       ]),\n//       cache: new InMemoryCache().restore(initialState || {})\n//     })\n// )\n\nexport const client = new ApolloClient({\n        link: ApolloLink.from([\n          onError(({ graphQLErrors, networkError }) => {\n            if (graphQLErrors)\n              graphQLErrors.forEach(({ message, locations, path }) =>\n                console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`)\n              )\n            if (networkError) console.log(`[Network error]: ${networkError}`)\n          }),\n          new HttpLink({\n            uri: graphqlURI,\n            credentials: 'same-origin',\n            fetch\n          })\n        ]),\n        cache: new InMemoryCache()\n      })\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AAfA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/index.js.c229c811fb3b19f590e4.hot-update.js","sources":["webpack:///./pages/components/Note.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { UPDATE_TODO, DELETE_TODO, TOGGLE_TODO, GET_TODOS } from '../../queries'\nimport { useMutation } from '@apollo/react-hooks'\n\nconst updateAfterDeleteMutation = (cache, { data }) => {\n  ;(function(cache, data) {\n    const { todoes } = cache.readQuery({ query: GET_TODOS })\n    cache.writeQuery({\n      query: GET_TODOS,\n      data: { todoes: todoes.filter(todo => todo.id !== data.deleteTodo.id) }\n    })\n  })(cache, data)\n}\n\nconst Note = ({ todo: {id, completed, title} }) => {\n  let inputRef\n\n  const [editable, setEditable] = useState(false)\n  const [value, setValue] = useState(title)\n\n  const [deleteTodo] = useMutation(DELETE_TODO, { update: updateAfterDeleteMutation })\n  const [toggleTodo] = useMutation(TOGGLE_TODO)\n  const [updateTodo] = useMutation(UPDATE_TODO)\n\n  useEffect(() => {\n    if (editable) {\n      inputRef.focus()\n    }\n  }, [editable])\n\n  const handleEdit = () => {\n    setEditable(!editable)\n  }\n\n  const classString = completed ? 'note completed' : 'note'\n  return (\n    <div className={classString}>\n      <input\n        ref={input => (inputRef = input)}\n        className={editable ? 'editable' : ''}\n        type=\"text\"\n        value={value}\n        onChange={(event)=> setValue(target.value)}\n        disabled={!editable}\n      />\n      <button className=\"edit\" onClick={handleEdit}>\n        {editable ? 'Save' : 'Edit'}\n      </button>\n      <button\n        className=\"done\"\n        onClick={() => toggleTodo({ variables: { data: { completed: !completed }, where: { id } } })}\n      >\n        {completed ? 'Undone' : 'Done'}\n      </button>\n      <button className=\"delete\" onClick={() => deleteTodo({ variables: { where: { id } } })}>\n        Delete\n      </button>\n    </div>\n  )\n}\n\nexport default Note\n"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AADA;AAAA;AACA;AAAA;AADA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAMA;AAAA;AANA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;A","sourceRoot":""}